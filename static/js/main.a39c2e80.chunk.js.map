{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search/Search.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Search","state","query","this","searchMovies","props","filter","toLowerCase","includes","htmlFor","type","id","placeholder","onChange","target","setState","value","React","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"owEAIaA,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,ICtBH,IAAMK,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,4CAKE,WAAU,IAAD,OACCA,EAAUC,KAAKF,MAAfC,MAGFE,EAFaD,KAAKE,MAAhBV,OAEoBW,QAAO,SAAAT,GAAK,OACtCA,EAAMZ,MAAMsB,cAAcC,SAASN,EAAMK,gBACtCV,EAAMX,YAAYqB,cAAcC,SAASN,EAAMK,kBAGpD,OACE,oCACE,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOoB,QAAQ,eAAepB,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEqB,KAAK,OACLC,GAAG,eACHtB,UAAU,QACVuB,YAAY,mBACZC,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACX,EAAKC,SAAS,CACZb,MAAOY,EAAOE,cAO1B,kBAAC,EAAD,CAAYrB,OAAQS,SArC5B,GAA4Ba,IAAMC,WAsDlClB,EAAOP,aAAe,CACpBE,OAAQ,I,WCtDGwB,EAAM,kBACjB,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEM,OAAQyB,KAGZ,yBAAK/B,UAAU,WAAf,uBCPJgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a39c2e80.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MoviesList } from '../MoviesList';\n\nexport class Search extends React.Component {\n  state = {\n    query: '',\n  };\n\n  render() {\n    const { query } = this.state;\n    const { movies } = this.props;\n\n    const searchMovies = movies.filter(movie => (\n      movie.title.toLowerCase().includes(query.toLowerCase())\n      || movie.description.toLowerCase().includes(query.toLowerCase())\n    ));\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"field\">\n            <label htmlFor=\"search-query\" className=\"label\">\n              Search movie\n            </label>\n\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"search-query\"\n                className=\"input\"\n                placeholder=\"Type search word\"\n                onChange={({ target }) => {\n                  this.setState({\n                    query: target.value,\n                  });\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <MoviesList movies={searchMovies} />\n      </>\n    );\n  }\n}\n\nSearch.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nSearch.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport './App.scss';\nimport { Search } from './components/Search';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => (\n  <div className=\"page\">\n    <div className=\"page-content\">\n      <Search\n        movies={moviesFromServer}\n      />\n    </div>\n    <div className=\"sidebar\">\n      Sidebar goes here\n    </div>\n  </div>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}